// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Demo Render generate Demo snapshot 1`] = `
<Memo(DemoPageTodoList)>
  <div>
    <Alert
      message="用户正在输入 "
    >
      <CSSMotion
        motionAppear={false}
        motionEnter={false}
        motionName="ant-alert-motion"
        onLeaveStart={[Function]}
        visible={true}
      >
        <DomWrapper>
          <div
            className="ant-alert ant-alert-info ant-alert-no-icon"
            data-show={true}
            role="alert"
            style={Object {}}
          >
            <div
              className="ant-alert-content"
            >
              <div
                className="ant-alert-message"
              >
                用户正在输入 
              </div>
              <div
                className="ant-alert-description"
              />
            </div>
          </div>
        </DomWrapper>
      </CSSMotion>
    </Alert>
    <h1
      id="bigValue"
    >
      100
    </h1>
    <Memo(SearArea)>
      <div>
        <Input
          onChange={[Function]}
          type="text"
          value=""
        >
          <ClearableLabeledInput
            bordered={true}
            element={
              <input
                className="ant-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            }
            focused={false}
            handleReset={[Function]}
            inputType="input"
            onChange={[Function]}
            prefixCls="ant-input"
            triggerFocus={[Function]}
            type="text"
            value=""
          >
            <input
              className="ant-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </ClearableLabeledInput>
        </Input>
        <Input
          onChange={[Function]}
          type="text"
          value=""
        >
          <ClearableLabeledInput
            bordered={true}
            element={
              <input
                className="ant-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            }
            focused={false}
            handleReset={[Function]}
            inputType="input"
            onChange={[Function]}
            prefixCls="ant-input"
            triggerFocus={[Function]}
            type="text"
            value=""
          >
            <input
              className="ant-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </ClearableLabeledInput>
        </Input>
        <span
          id="bigValue"
        >
          100
        </span>
        <Button
          id="addBigBtn"
          onClick={[Function]}
        >
          <Wave>
            <button
              className="ant-btn"
              id="addBigBtn"
              onClick={[Function]}
              type="button"
            >
              <LoadingIcon
                existIcon={false}
                loading={false}
                prefixCls="ant-btn"
              >
                <CSSMotion
                  motionName="ant-btn-loading-icon-motion"
                  onAppearActive={[Function]}
                  onAppearStart={[Function]}
                  onEnterActive={[Function]}
                  onEnterStart={[Function]}
                  onLeaveActive={[Function]}
                  onLeaveStart={[Function]}
                  removeOnLeave={true}
                  visible={false}
                >
                  <DomWrapper />
                </CSSMotion>
              </LoadingIcon>
            </button>
          </Wave>
        </Button>
      </div>
    </Memo(SearArea)>
    <Memo()>
      <h1
        style={
          Object {
            "border": "1px solid blue",
          }
        }
      >
        0
      </h1>
    </Memo()>
    <Memo()>
      <h1
        style={
          Object {
            "border": "1px solid blue",
          }
        }
      >
        0
      </h1>
    </Memo()>
    <Memo(ListArea)>
      <div>
        <Button
          id="refreshBtn"
          onClick={[Function]}
        >
          <Wave>
            <button
              className="ant-btn"
              id="refreshBtn"
              onClick={[Function]}
              type="button"
            >
              <LoadingIcon
                existIcon={false}
                loading={false}
                prefixCls="ant-btn"
              >
                <CSSMotion
                  motionName="ant-btn-loading-icon-motion"
                  onAppearActive={[Function]}
                  onAppearStart={[Function]}
                  onEnterActive={[Function]}
                  onEnterStart={[Function]}
                  onLeaveActive={[Function]}
                  onLeaveStart={[Function]}
                  removeOnLeave={true}
                  visible={false}
                >
                  <DomWrapper />
                </CSSMotion>
              </LoadingIcon>
              <span
                key=".0"
              >
                refresh
              </span>
            </button>
          </Wave>
        </Button>
        <Button
          id="refreshBtn"
          onClick={[Function]}
        >
          <Wave>
            <button
              className="ant-btn"
              id="refreshBtn"
              onClick={[Function]}
              type="button"
            >
              <LoadingIcon
                existIcon={false}
                loading={false}
                prefixCls="ant-btn"
              >
                <CSSMotion
                  motionName="ant-btn-loading-icon-motion"
                  onAppearActive={[Function]}
                  onAppearStart={[Function]}
                  onEnterActive={[Function]}
                  onEnterStart={[Function]}
                  onLeaveActive={[Function]}
                  onLeaveStart={[Function]}
                  removeOnLeave={true}
                  visible={false}
                >
                  <DomWrapper />
                </CSSMotion>
              </LoadingIcon>
              <span
                key=".0"
              >
                test 0
              </span>
            </button>
          </Wave>
        </Button>
        <Memo(GeneralTable)
          columns={
            Array [
              Object {
                "dataIndex": "id",
                "key": "id",
                "title": "id",
              },
              Object {
                "dataIndex": "text",
                "key": "text",
                "title": "文案",
              },
              Object {
                "dataIndex": "done",
                "key": "done",
                "render": [Function],
                "title": "是否完成",
              },
            ]
          }
          fetchFn={[Function]}
          tid="todoTable"
        >
          <Table
            columns={
              Array [
                Object {
                  "dataIndex": "id",
                  "key": "id",
                  "title": "id",
                },
                Object {
                  "dataIndex": "text",
                  "key": "text",
                  "title": "文案",
                },
                Object {
                  "dataIndex": "done",
                  "key": "done",
                  "render": [Function],
                  "title": "是否完成",
                },
              ]
            }
            dataSource={Array []}
            loading={false}
            pagination={false}
            rowKey="id"
            scroll={
              Object {
                "x": "100%",
              }
            }
          >
            <div
              className="ant-table-wrapper"
            >
              <Spin
                size="default"
                spinning={false}
                wrapperClassName=""
              >
                <div
                  className="ant-spin-nested-loading"
                >
                  <div
                    className="ant-spin-container"
                    key="container"
                  >
                    <Table
                      className="ant-table-empty"
                      columns={
                        Array [
                          Object {
                            "dataIndex": "id",
                            "key": "id",
                            "title": "id",
                          },
                          Object {
                            "dataIndex": "text",
                            "key": "text",
                            "title": "文案",
                          },
                          Object {
                            "dataIndex": "done",
                            "key": "done",
                            "render": [Function],
                            "title": "是否完成",
                          },
                        ]
                      }
                      data={Array []}
                      dataSource={Array []}
                      emptyText={
                        <Context.Consumer>
                          [Function]
                        </Context.Consumer>
                      }
                      expandable={
                        Object {
                          "__PARENT_RENDER_ICON__": undefined,
                          "childrenColumnName": undefined,
                          "expandIcon": [Function],
                          "expandIconColumnIndex": undefined,
                          "indentSize": 15,
                        }
                      }
                      internalHooks="rc-table-internal-hook"
                      internalRefs={
                        Object {
                          "body": Object {
                            "current": <div
                              class="ant-table-content"
                              style="overflow-x: auto; overflow-y: hidden;"
                            >
                              <table
                                style="width: 100%; min-width: 100%; table-layout: auto;"
                              >
                                <colgroup />
                                <thead
                                  class="ant-table-thead"
                                >
                                  <tr>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      id
                                    </th>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      文案
                                    </th>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      是否完成
                                    </th>
                                  </tr>
                                </thead>
                                <tbody
                                  class="ant-table-tbody"
                                >
                                  <tr
                                    aria-hidden="true"
                                    class="ant-table-measure-row"
                                    style="height: 0px; font-size: 0;"
                                  >
                                    <td
                                      style="padding: 0px; border: 0px; height: 0px;"
                                    >
                                      <div
                                        style="height: 0px; overflow: hidden;"
                                      >
                                         
                                      </div>
                                    </td>
                                    <td
                                      style="padding: 0px; border: 0px; height: 0px;"
                                    >
                                      <div
                                        style="height: 0px; overflow: hidden;"
                                      >
                                         
                                      </div>
                                    </td>
                                    <td
                                      style="padding: 0px; border: 0px; height: 0px;"
                                    >
                                      <div
                                        style="height: 0px; overflow: hidden;"
                                      >
                                         
                                      </div>
                                    </td>
                                  </tr>
                                  <tr
                                    class="ant-table-placeholder"
                                  >
                                    <td
                                      class="ant-table-cell"
                                      colspan="3"
                                    >
                                      <div
                                        class="ant-table-expanded-row-fixed"
                                        style="width: 0px; position: sticky; left: 0px; overflow: hidden;"
                                      >
                                        <div
                                          class="ant-empty ant-empty-normal"
                                        >
                                          <div
                                            class="ant-empty-image"
                                          >
                                            <svg
                                              class="ant-empty-img-simple"
                                              height="41"
                                              viewBox="0 0 64 41"
                                              width="64"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <g
                                                fill="none"
                                                fill-rule="evenodd"
                                                transform="translate(0 1)"
                                              >
                                                <ellipse
                                                  class="ant-empty-img-simple-ellipse"
                                                  cx="32"
                                                  cy="33"
                                                  rx="32"
                                                  ry="7"
                                                />
                                                <g
                                                  class="ant-empty-img-simple-g"
                                                  fill-rule="nonzero"
                                                >
                                                  <path
                                                    d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                  />
                                                  <path
                                                    class="ant-empty-img-simple-path"
                                                    d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                  />
                                                </g>
                                              </g>
                                            </svg>
                                          </div>
                                          <div
                                            class="ant-empty-description"
                                          >
                                            No Data
                                          </div>
                                        </div>
                                      </div>
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>,
                          },
                        }
                      }
                      loading={false}
                      pagination={false}
                      prefixCls="ant-table"
                      rowClassName={[Function]}
                      rowKey={[Function]}
                      scroll={
                        Object {
                          "x": "100%",
                        }
                      }
                      transformColumns={[Function]}
                    >
                      <ResizeObserver
                        onResize={[Function]}
                      >
                        <div
                          className="ant-table ant-table-empty ant-table-scroll-horizontal"
                        >
                          <Component
                            pingLeft={false}
                            pingRight={false}
                            props={
                              Object {
                                "className": "ant-table-empty",
                                "columns": Array [
                                  Object {
                                    "dataIndex": "id",
                                    "key": "id",
                                    "title": "id",
                                  },
                                  Object {
                                    "dataIndex": "text",
                                    "key": "text",
                                    "title": "文案",
                                  },
                                  Object {
                                    "dataIndex": "done",
                                    "key": "done",
                                    "render": [Function],
                                    "title": "是否完成",
                                  },
                                ],
                                "data": Array [],
                                "dataSource": Array [],
                                "direction": undefined,
                                "emptyText": <Context.Consumer>
                                  [Function]
                                </Context.Consumer>,
                                "expandable": Object {
                                  "__PARENT_RENDER_ICON__": undefined,
                                  "childrenColumnName": undefined,
                                  "expandIcon": [Function],
                                  "expandIconColumnIndex": undefined,
                                  "indentSize": 15,
                                },
                                "internalHooks": "rc-table-internal-hook",
                                "internalRefs": Object {
                                  "body": Object {
                                    "current": <div
                                      class="ant-table-content"
                                      style="overflow-x: auto; overflow-y: hidden;"
                                    >
                                      <table
                                        style="width: 100%; min-width: 100%; table-layout: auto;"
                                      >
                                        <colgroup />
                                        <thead
                                          class="ant-table-thead"
                                        >
                                          <tr>
                                            <th
                                              class="ant-table-cell"
                                            >
                                              id
                                            </th>
                                            <th
                                              class="ant-table-cell"
                                            >
                                              文案
                                            </th>
                                            <th
                                              class="ant-table-cell"
                                            >
                                              是否完成
                                            </th>
                                          </tr>
                                        </thead>
                                        <tbody
                                          class="ant-table-tbody"
                                        >
                                          <tr
                                            aria-hidden="true"
                                            class="ant-table-measure-row"
                                            style="height: 0px; font-size: 0;"
                                          >
                                            <td
                                              style="padding: 0px; border: 0px; height: 0px;"
                                            >
                                              <div
                                                style="height: 0px; overflow: hidden;"
                                              >
                                                 
                                              </div>
                                            </td>
                                            <td
                                              style="padding: 0px; border: 0px; height: 0px;"
                                            >
                                              <div
                                                style="height: 0px; overflow: hidden;"
                                              >
                                                 
                                              </div>
                                            </td>
                                            <td
                                              style="padding: 0px; border: 0px; height: 0px;"
                                            >
                                              <div
                                                style="height: 0px; overflow: hidden;"
                                              >
                                                 
                                              </div>
                                            </td>
                                          </tr>
                                          <tr
                                            class="ant-table-placeholder"
                                          >
                                            <td
                                              class="ant-table-cell"
                                              colspan="3"
                                            >
                                              <div
                                                class="ant-table-expanded-row-fixed"
                                                style="width: 0px; position: sticky; left: 0px; overflow: hidden;"
                                              >
                                                <div
                                                  class="ant-empty ant-empty-normal"
                                                >
                                                  <div
                                                    class="ant-empty-image"
                                                  >
                                                    <svg
                                                      class="ant-empty-img-simple"
                                                      height="41"
                                                      viewBox="0 0 64 41"
                                                      width="64"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <g
                                                        fill="none"
                                                        fill-rule="evenodd"
                                                        transform="translate(0 1)"
                                                      >
                                                        <ellipse
                                                          class="ant-empty-img-simple-ellipse"
                                                          cx="32"
                                                          cy="33"
                                                          rx="32"
                                                          ry="7"
                                                        />
                                                        <g
                                                          class="ant-empty-img-simple-g"
                                                          fill-rule="nonzero"
                                                        >
                                                          <path
                                                            d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                          />
                                                          <path
                                                            class="ant-empty-img-simple-path"
                                                            d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                          />
                                                        </g>
                                                      </g>
                                                    </svg>
                                                  </div>
                                                  <div
                                                    class="ant-empty-description"
                                                  >
                                                    No Data
                                                  </div>
                                                </div>
                                              </div>
                                            </td>
                                          </tr>
                                        </tbody>
                                      </table>
                                    </div>,
                                  },
                                },
                                "loading": false,
                                "mergedExpandedKeys": Set {},
                                "pagination": false,
                                "prefixCls": "ant-table",
                                "rowClassName": [Function],
                                "rowKey": [Function],
                                "scroll": Object {
                                  "x": "100%",
                                },
                                "size": undefined,
                                "stickyOffsets": Object {
                                  "left": Array [
                                    0,
                                    0,
                                    0,
                                  ],
                                  "right": Array [
                                    0,
                                    0,
                                    0,
                                  ],
                                },
                                "transformColumns": [Function],
                              }
                            }
                          >
                            <div
                              className="ant-table-container"
                            >
                              <div
                                className="ant-table-content"
                                onScroll={[Function]}
                                style={
                                  Object {
                                    "overflowX": "auto",
                                    "overflowY": "hidden",
                                  }
                                }
                              >
                                <table
                                  style={
                                    Object {
                                      "minWidth": "100%",
                                      "tableLayout": "auto",
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <ColGroup
                                    colWidths={
                                      Array [
                                        undefined,
                                        undefined,
                                        undefined,
                                      ]
                                    }
                                    columns={
                                      Array [
                                        Object {
                                          "dataIndex": "id",
                                          "fixed": undefined,
                                          "key": "id",
                                          "title": "id",
                                        },
                                        Object {
                                          "dataIndex": "text",
                                          "fixed": undefined,
                                          "key": "text",
                                          "title": "文案",
                                        },
                                        Object {
                                          "dataIndex": "done",
                                          "fixed": undefined,
                                          "key": "done",
                                          "render": [Function],
                                          "title": "是否完成",
                                        },
                                      ]
                                    }
                                  >
                                    <colgroup />
                                  </ColGroup>
                                  <Header
                                    colWidths={
                                      Array [
                                        undefined,
                                        undefined,
                                        undefined,
                                      ]
                                    }
                                    columCount={3}
                                    columns={
                                      Array [
                                        Object {
                                          "dataIndex": "id",
                                          "key": "id",
                                          "title": "id",
                                        },
                                        Object {
                                          "dataIndex": "text",
                                          "key": "text",
                                          "title": "文案",
                                        },
                                        Object {
                                          "dataIndex": "done",
                                          "key": "done",
                                          "render": [Function],
                                          "title": "是否完成",
                                        },
                                      ]
                                    }
                                    fixHeader={false}
                                    flattenColumns={
                                      Array [
                                        Object {
                                          "dataIndex": "id",
                                          "fixed": undefined,
                                          "key": "id",
                                          "title": "id",
                                        },
                                        Object {
                                          "dataIndex": "text",
                                          "fixed": undefined,
                                          "key": "text",
                                          "title": "文案",
                                        },
                                        Object {
                                          "dataIndex": "done",
                                          "fixed": undefined,
                                          "key": "done",
                                          "render": [Function],
                                          "title": "是否完成",
                                        },
                                      ]
                                    }
                                    stickyOffsets={
                                      Object {
                                        "left": Array [
                                          0,
                                          0,
                                          0,
                                        ],
                                        "right": Array [
                                          0,
                                          0,
                                          0,
                                        ],
                                      }
                                    }
                                  >
                                    <thead
                                      className="ant-table-thead"
                                    >
                                      <HeaderRow
                                        cellComponent="th"
                                        cells={
                                          Array [
                                            Object {
                                              "children": "id",
                                              "className": "",
                                              "colEnd": 0,
                                              "colSpan": 1,
                                              "colStart": 0,
                                              "column": Object {
                                                "dataIndex": "id",
                                                "key": "id",
                                                "title": "id",
                                              },
                                              "key": "id",
                                              "rowSpan": 1,
                                            },
                                            Object {
                                              "children": "文案",
                                              "className": "",
                                              "colEnd": 1,
                                              "colSpan": 1,
                                              "colStart": 1,
                                              "column": Object {
                                                "dataIndex": "text",
                                                "key": "text",
                                                "title": "文案",
                                              },
                                              "key": "text",
                                              "rowSpan": 1,
                                            },
                                            Object {
                                              "children": "是否完成",
                                              "className": "",
                                              "colEnd": 2,
                                              "colSpan": 1,
                                              "colStart": 2,
                                              "column": Object {
                                                "dataIndex": "done",
                                                "key": "done",
                                                "render": [Function],
                                                "title": "是否完成",
                                              },
                                              "key": "done",
                                              "rowSpan": 1,
                                            },
                                          ]
                                        }
                                        flattenColumns={
                                          Array [
                                            Object {
                                              "dataIndex": "id",
                                              "fixed": undefined,
                                              "key": "id",
                                              "title": "id",
                                            },
                                            Object {
                                              "dataIndex": "text",
                                              "fixed": undefined,
                                              "key": "text",
                                              "title": "文案",
                                            },
                                            Object {
                                              "dataIndex": "done",
                                              "fixed": undefined,
                                              "key": "done",
                                              "render": [Function],
                                              "title": "是否完成",
                                            },
                                          ]
                                        }
                                        index={0}
                                        key="0"
                                        rowComponent="tr"
                                        stickyOffsets={
                                          Object {
                                            "left": Array [
                                              0,
                                              0,
                                              0,
                                            ],
                                            "right": Array [
                                              0,
                                              0,
                                              0,
                                            ],
                                          }
                                        }
                                      >
                                        <tr>
                                          <Cell
                                            className=""
                                            colEnd={0}
                                            colSpan={1}
                                            colStart={0}
                                            column={
                                              Object {
                                                "dataIndex": "id",
                                                "key": "id",
                                                "title": "id",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            key="id"
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              id
                                            </th>
                                          </Cell>
                                          <Cell
                                            className=""
                                            colEnd={1}
                                            colSpan={1}
                                            colStart={1}
                                            column={
                                              Object {
                                                "dataIndex": "text",
                                                "key": "text",
                                                "title": "文案",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            key="text"
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              文案
                                            </th>
                                          </Cell>
                                          <Cell
                                            className=""
                                            colEnd={2}
                                            colSpan={1}
                                            colStart={2}
                                            column={
                                              Object {
                                                "dataIndex": "done",
                                                "key": "done",
                                                "render": [Function],
                                                "title": "是否完成",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            key="done"
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              是否完成
                                            </th>
                                          </Cell>
                                        </tr>
                                      </HeaderRow>
                                    </thead>
                                  </Header>
                                  <Body
                                    childrenColumnName="children"
                                    data={Array []}
                                    emptyNode={
                                      <Context.Consumer>
                                        [Function]
                                      </Context.Consumer>
                                    }
                                    expandedKeys={Set {}}
                                    getRowKey={[Function]}
                                    measureColumnWidth={true}
                                  >
                                    <tbody
                                      className="ant-table-tbody"
                                    >
                                      <tr
                                        aria-hidden="true"
                                        className="ant-table-measure-row"
                                        style={
                                          Object {
                                            "fontSize": 0,
                                            "height": 0,
                                          }
                                        }
                                      >
                                        <MeasureCell
                                          columnKey="id"
                                          key="id"
                                          onColumnResize={[Function]}
                                        >
                                          <ResizeObserver
                                            onResize={[Function]}
                                          >
                                            <td
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "height": 0,
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                 
                                              </div>
                                            </td>
                                          </ResizeObserver>
                                        </MeasureCell>
                                        <MeasureCell
                                          columnKey="text"
                                          key="text"
                                          onColumnResize={[Function]}
                                        >
                                          <ResizeObserver
                                            onResize={[Function]}
                                          >
                                            <td
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "height": 0,
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                 
                                              </div>
                                            </td>
                                          </ResizeObserver>
                                        </MeasureCell>
                                        <MeasureCell
                                          columnKey="done"
                                          key="done"
                                          onColumnResize={[Function]}
                                        >
                                          <ResizeObserver
                                            onResize={[Function]}
                                          >
                                            <td
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "height": 0,
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                 
                                              </div>
                                            </td>
                                          </ResizeObserver>
                                        </MeasureCell>
                                      </tr>
                                      <ExpandedRow
                                        cellComponent="td"
                                        className="ant-table-placeholder"
                                        colSpan={3}
                                        component="tr"
                                        componentWidth={0}
                                        expanded={true}
                                        fixColumn={true}
                                        fixHeader={false}
                                        horizonScroll={true}
                                        prefixCls="ant-table"
                                      >
                                        <tr
                                          className="ant-table-placeholder"
                                          style={
                                            Object {
                                              "display": null,
                                            }
                                          }
                                        >
                                          <Cell
                                            colSpan={3}
                                            component="td"
                                            prefixCls="ant-table"
                                          >
                                            <td
                                              className="ant-table-cell"
                                              colSpan={3}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-table-expanded-row-fixed"
                                                style={
                                                  Object {
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "sticky",
                                                    "width": 0,
                                                  }
                                                }
                                              >
                                                <Empty
                                                  image={<Simple />}
                                                >
                                                  <LocaleReceiver
                                                    componentName="Empty"
                                                  >
                                                    <div
                                                      className="ant-empty ant-empty-normal"
                                                    >
                                                      <div
                                                        className="ant-empty-image"
                                                      >
                                                        <Simple>
                                                          <svg
                                                            className="ant-empty-img-simple"
                                                            height="41"
                                                            viewBox="0 0 64 41"
                                                            width="64"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <g
                                                              fill="none"
                                                              fillRule="evenodd"
                                                              transform="translate(0 1)"
                                                            >
                                                              <ellipse
                                                                className="ant-empty-img-simple-ellipse"
                                                                cx="32"
                                                                cy="33"
                                                                rx="32"
                                                                ry="7"
                                                              />
                                                              <g
                                                                className="ant-empty-img-simple-g"
                                                                fillRule="nonzero"
                                                              >
                                                                <path
                                                                  d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                />
                                                                <path
                                                                  className="ant-empty-img-simple-path"
                                                                  d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                />
                                                              </g>
                                                            </g>
                                                          </svg>
                                                        </Simple>
                                                      </div>
                                                      <div
                                                        className="ant-empty-description"
                                                      >
                                                        No Data
                                                      </div>
                                                    </div>
                                                  </LocaleReceiver>
                                                </Empty>
                                              </div>
                                            </td>
                                          </Cell>
                                        </tr>
                                      </ExpandedRow>
                                    </tbody>
                                  </Body>
                                </table>
                              </div>
                            </div>
                          </Component>
                        </div>
                      </ResizeObserver>
                    </Table>
                  </div>
                </div>
              </Spin>
            </div>
          </Table>
          <div
            style={
              Object {
                "height": "19px",
                "width": "100%",
              }
            }
          />
          <Pagination
            current={1}
            onChange={[Function]}
            onShowSizeChange={[Function]}
            pageSize={50}
            pageSizeOptions={
              Array [
                "50",
                "100",
                "200",
              ]
            }
            showSizeChanger={true}
            total={0}
          >
            <LocaleReceiver
              componentName="Pagination"
              defaultLocale={
                Object {
                  "items_per_page": "/ page",
                  "jump_to": "Go to",
                  "jump_to_confirm": "confirm",
                  "next_3": "Next 3 Pages",
                  "next_5": "Next 5 Pages",
                  "next_page": "Next Page",
                  "page": "",
                  "prev_3": "Previous 3 Pages",
                  "prev_5": "Previous 5 Pages",
                  "prev_page": "Previous Page",
                }
              }
            >
              <Pagination
                className=""
                current={1}
                defaultCurrent={1}
                defaultPageSize={10}
                hideOnSinglePage={false}
                itemRender={[Function]}
                jumpNextIcon={
                  <a
                    className="ant-pagination-item-link"
                  >
                    <div
                      className="ant-pagination-item-container"
                    >
                      <ForwardRef(DoubleRightOutlined)
                        className="ant-pagination-item-link-icon"
                      />
                      <span
                        className="ant-pagination-item-ellipsis"
                      >
                        •••
                      </span>
                    </div>
                  </a>
                }
                jumpPrevIcon={
                  <a
                    className="ant-pagination-item-link"
                  >
                    <div
                      className="ant-pagination-item-container"
                    >
                      <ForwardRef(DoubleLeftOutlined)
                        className="ant-pagination-item-link-icon"
                      />
                      <span
                        className="ant-pagination-item-ellipsis"
                      >
                        •••
                      </span>
                    </div>
                  </a>
                }
                locale={
                  Object {
                    "items_per_page": "/ page",
                    "jump_to": "Go to",
                    "jump_to_confirm": "confirm",
                    "next_3": "Next 3 Pages",
                    "next_5": "Next 5 Pages",
                    "next_page": "Next Page",
                    "page": "",
                    "prev_3": "Previous 3 Pages",
                    "prev_5": "Previous 5 Pages",
                    "prev_page": "Previous Page",
                  }
                }
                nextIcon={
                  <button
                    className="ant-pagination-item-link"
                    tabIndex={-1}
                    type="button"
                  >
                    <ForwardRef(RightOutlined) />
                  </button>
                }
                onChange={[Function]}
                onShowSizeChange={[Function]}
                pageSize={50}
                pageSizeOptions={
                  Array [
                    "50",
                    "100",
                    "200",
                  ]
                }
                prefixCls="ant-pagination"
                prevIcon={
                  <button
                    className="ant-pagination-item-link"
                    tabIndex={-1}
                    type="button"
                  >
                    <ForwardRef(LeftOutlined) />
                  </button>
                }
                selectComponentClass={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "OptGroup": [Function],
                    "Option": [Function],
                    "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                    "render": [Function],
                  }
                }
                selectPrefixCls="ant-select"
                showLessItems={false}
                showPrevNextJumpers={true}
                showQuickJumper={false}
                showSizeChanger={true}
                showTitle={true}
                style={Object {}}
                total={0}
                totalBoundaryShowSizeChanger={50}
              >
                <ul
                  className="ant-pagination"
                  style={Object {}}
                  unselectable="unselectable"
                >
                  <li
                    aria-disabled={true}
                    className="ant-pagination-prev ant-pagination-disabled"
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={null}
                    title="Previous Page"
                  >
                    <button
                      className="ant-pagination-item-link"
                      disabled={true}
                      tabIndex={-1}
                      type="button"
                    >
                      <ForwardRef(LeftOutlined)>
                        <AntdIcon
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "left",
                              "theme": "outlined",
                            }
                          }
                        >
                          <span
                            aria-label="left"
                            className="anticon anticon-left"
                            role="img"
                          >
                            <IconReact
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "64 64 896 896",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "left",
                                  "theme": "outlined",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                data-icon="left"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                key="svg-left"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
                                  key="svg-left-svg-0"
                                />
                              </svg>
                            </IconReact>
                          </span>
                        </AntdIcon>
                      </ForwardRef(LeftOutlined)>
                    </button>
                  </li>
                  <Pager
                    className="ant-pagination-disabled"
                    itemRender={[Function]}
                    key="noPager"
                    locale={
                      Object {
                        "items_per_page": "/ page",
                        "jump_to": "Go to",
                        "jump_to_confirm": "confirm",
                        "next_3": "Next 3 Pages",
                        "next_5": "Next 5 Pages",
                        "next_page": "Next Page",
                        "page": "",
                        "prev_3": "Previous 3 Pages",
                        "prev_5": "Previous 5 Pages",
                        "prev_page": "Previous Page",
                      }
                    }
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    page={0}
                    rootPrefixCls="ant-pagination"
                    showTitle={true}
                  >
                    <li
                      className="ant-pagination-item ant-pagination-item-0 ant-pagination-disabled ant-pagination-item-disabled"
                      onClick={[Function]}
                      onKeyPress={[Function]}
                      tabIndex="0"
                      title={0}
                    >
                      <a
                        rel="nofollow"
                      >
                        0
                      </a>
                    </li>
                  </Pager>
                  <li
                    aria-disabled={true}
                    className="ant-pagination-next ant-pagination-disabled"
                    onClick={[Function]}
                    onKeyPress={[Function]}
                    tabIndex={null}
                    title="Next Page"
                  >
                    <button
                      className="ant-pagination-item-link"
                      disabled={true}
                      tabIndex={-1}
                      type="button"
                    >
                      <ForwardRef(RightOutlined)>
                        <AntdIcon
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "right",
                              "theme": "outlined",
                            }
                          }
                        >
                          <span
                            aria-label="right"
                            className="anticon anticon-right"
                            role="img"
                          >
                            <IconReact
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "64 64 896 896",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "right",
                                  "theme": "outlined",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                data-icon="right"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                key="svg-right"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                  key="svg-right-svg-0"
                                />
                              </svg>
                            </IconReact>
                          </span>
                        </AntdIcon>
                      </ForwardRef(RightOutlined)>
                    </button>
                  </li>
                  <Options
                    changeSize={[Function]}
                    current={1}
                    goButton={false}
                    locale={
                      Object {
                        "items_per_page": "/ page",
                        "jump_to": "Go to",
                        "jump_to_confirm": "confirm",
                        "next_3": "Next 3 Pages",
                        "next_5": "Next 5 Pages",
                        "next_page": "Next Page",
                        "page": "",
                        "prev_3": "Previous 3 Pages",
                        "prev_5": "Previous 5 Pages",
                        "prev_page": "Previous Page",
                      }
                    }
                    pageSize={50}
                    pageSizeOptions={
                      Array [
                        "50",
                        "100",
                        "200",
                      ]
                    }
                    quickGo={null}
                    rootPrefixCls="ant-pagination"
                    selectComponentClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "OptGroup": [Function],
                        "Option": [Function],
                        "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                        "render": [Function],
                      }
                    }
                    selectPrefixCls="ant-select"
                  >
                    <li
                      className="ant-pagination-options"
                    >
                      <ForwardRef(InternalSelect)
                        className="ant-pagination-options-size-changer"
                        dropdownMatchSelectWidth={false}
                        getPopupContainer={[Function]}
                        onChange={[Function]}
                        optionLabelProp="children"
                        prefixCls="ant-select"
                        showSearch={false}
                        value="50"
                      >
                        <Select
                          className="ant-pagination-options-size-changer"
                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                          dropdownClassName=""
                          dropdownMatchSelectWidth={false}
                          getPopupContainer={[Function]}
                          inputIcon={[Function]}
                          listHeight={256}
                          listItemHeight={24}
                          menuItemSelectedIcon={null}
                          notFoundContent={
                            <Context.Consumer>
                              [Function]
                            </Context.Consumer>
                          }
                          onChange={[Function]}
                          optionLabelProp="children"
                          prefixCls="ant-select"
                          removeIcon={<ForwardRef(CloseOutlined) />}
                          showSearch={false}
                          transitionName="slide-up"
                          value="50"
                        >
                          <ForwardRef(Select)
                            className="ant-pagination-options-size-changer"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            dropdownClassName=""
                            dropdownMatchSelectWidth={false}
                            getPopupContainer={[Function]}
                            inputIcon={[Function]}
                            listHeight={256}
                            listItemHeight={24}
                            menuItemSelectedIcon={null}
                            notFoundContent={
                              <Context.Consumer>
                                [Function]
                              </Context.Consumer>
                            }
                            onChange={[Function]}
                            optionLabelProp="children"
                            prefixCls="ant-select"
                            removeIcon={<ForwardRef(CloseOutlined) />}
                            showSearch={false}
                            transitionName="slide-up"
                            value="50"
                          >
                            <div
                              className="ant-select ant-pagination-options-size-changer ant-select-single ant-select-show-arrow"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                            >
                              <SelectTrigger
                                containerWidth={null}
                                dropdownClassName=""
                                dropdownMatchSelectWidth={false}
                                empty={false}
                                getPopupContainer={[Function]}
                                getTriggerDOMNode={[Function]}
                                popupElement={
                                  <ForwardRef(OptionList)
                                    childrenAsData={true}
                                    defaultActiveFirstOption={true}
                                    flattenOptions={
                                      Array [
                                        Object {
                                          "data": Object {
                                            "children": "50 / page",
                                            "key": "0",
                                            "value": "50",
                                          },
                                          "groupOption": false,
                                          "key": "0",
                                        },
                                        Object {
                                          "data": Object {
                                            "children": "100 / page",
                                            "key": "1",
                                            "value": "100",
                                          },
                                          "groupOption": false,
                                          "key": "1",
                                        },
                                        Object {
                                          "data": Object {
                                            "children": "200 / page",
                                            "key": "2",
                                            "value": "200",
                                          },
                                          "groupOption": false,
                                          "key": "2",
                                        },
                                      ]
                                    }
                                    height={256}
                                    id="rc_select_TEST_OR_SSR"
                                    itemHeight={24}
                                    menuItemSelectedIcon={null}
                                    multiple={false}
                                    notFoundContent={
                                      <Context.Consumer>
                                        [Function]
                                      </Context.Consumer>
                                    }
                                    onActiveValue={[Function]}
                                    onMouseEnter={[Function]}
                                    onSelect={[Function]}
                                    onToggleOpen={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "children": "50 / page",
                                          "key": "0",
                                          "value": "50",
                                        },
                                        Object {
                                          "children": "100 / page",
                                          "key": "1",
                                          "value": "100",
                                        },
                                        Object {
                                          "children": "200 / page",
                                          "key": "2",
                                          "value": "200",
                                        },
                                      ]
                                    }
                                    prefixCls="ant-select"
                                    searchValue=""
                                    values={
                                      Set {
                                        "50",
                                      }
                                    }
                                    virtual={false}
                                  />
                                }
                                prefixCls="ant-select"
                                transitionName="slide-up"
                              >
                                <Trigger
                                  action={Array []}
                                  afterPopupVisibleChange={[Function]}
                                  autoDestroy={false}
                                  blurDelay={0.15}
                                  builtinPlacements={
                                    Object {
                                      "bottomLeft": Object {
                                        "offset": Array [
                                          0,
                                          4,
                                        ],
                                        "overflow": Object {
                                          "adjustX": 0,
                                          "adjustY": 1,
                                        },
                                        "points": Array [
                                          "tl",
                                          "bl",
                                        ],
                                      },
                                      "bottomRight": Object {
                                        "offset": Array [
                                          0,
                                          4,
                                        ],
                                        "overflow": Object {
                                          "adjustX": 0,
                                          "adjustY": 1,
                                        },
                                        "points": Array [
                                          "tr",
                                          "br",
                                        ],
                                      },
                                      "topLeft": Object {
                                        "offset": Array [
                                          0,
                                          -4,
                                        ],
                                        "overflow": Object {
                                          "adjustX": 0,
                                          "adjustY": 1,
                                        },
                                        "points": Array [
                                          "bl",
                                          "tl",
                                        ],
                                      },
                                      "topRight": Object {
                                        "offset": Array [
                                          0,
                                          -4,
                                        ],
                                        "overflow": Object {
                                          "adjustX": 0,
                                          "adjustY": 1,
                                        },
                                        "points": Array [
                                          "br",
                                          "tr",
                                        ],
                                      },
                                    }
                                  }
                                  defaultPopupVisible={false}
                                  destroyPopupOnHide={false}
                                  focusDelay={0}
                                  getDocument={[Function]}
                                  getPopupClassNameFromAlign={[Function]}
                                  getPopupContainer={[Function]}
                                  getTriggerDOMNode={[Function]}
                                  hideAction={Array []}
                                  mask={false}
                                  maskClosable={true}
                                  mouseEnterDelay={0}
                                  mouseLeaveDelay={0.1}
                                  onPopupAlign={[Function]}
                                  onPopupVisibleChange={[Function]}
                                  popup={
                                    <div>
                                      <ForwardRef(OptionList)
                                        childrenAsData={true}
                                        defaultActiveFirstOption={true}
                                        flattenOptions={
                                          Array [
                                            Object {
                                              "data": Object {
                                                "children": "50 / page",
                                                "key": "0",
                                                "value": "50",
                                              },
                                              "groupOption": false,
                                              "key": "0",
                                            },
                                            Object {
                                              "data": Object {
                                                "children": "100 / page",
                                                "key": "1",
                                                "value": "100",
                                              },
                                              "groupOption": false,
                                              "key": "1",
                                            },
                                            Object {
                                              "data": Object {
                                                "children": "200 / page",
                                                "key": "2",
                                                "value": "200",
                                              },
                                              "groupOption": false,
                                              "key": "2",
                                            },
                                          ]
                                        }
                                        height={256}
                                        id="rc_select_TEST_OR_SSR"
                                        itemHeight={24}
                                        menuItemSelectedIcon={null}
                                        multiple={false}
                                        notFoundContent={
                                          <Context.Consumer>
                                            [Function]
                                          </Context.Consumer>
                                        }
                                        onActiveValue={[Function]}
                                        onMouseEnter={[Function]}
                                        onSelect={[Function]}
                                        onToggleOpen={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "children": "50 / page",
                                              "key": "0",
                                              "value": "50",
                                            },
                                            Object {
                                              "children": "100 / page",
                                              "key": "1",
                                              "value": "100",
                                            },
                                            Object {
                                              "children": "200 / page",
                                              "key": "2",
                                              "value": "200",
                                            },
                                          ]
                                        }
                                        prefixCls="ant-select"
                                        searchValue=""
                                        values={
                                          Set {
                                            "50",
                                          }
                                        }
                                        virtual={false}
                                      />
                                    </div>
                                  }
                                  popupAlign={Object {}}
                                  popupClassName=""
                                  popupPlacement="bottomLeft"
                                  popupStyle={
                                    Object {
                                      "minWidth": null,
                                    }
                                  }
                                  popupTransitionName="slide-up"
                                  prefixCls="ant-select-dropdown"
                                  showAction={Array []}
                                >
                                  <Selector
                                    accessibilityIndex={0}
                                    activeValue={null}
                                    className="ant-pagination-options-size-changer"
                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                    domRef={
                                      Object {
                                        "current": <div
                                          class="ant-select-selector"
                                        >
                                          <span
                                            class="ant-select-selection-search"
                                          >
                                            <input
                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                              aria-autocomplete="list"
                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                              aria-haspopup="listbox"
                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                              autocomplete="off"
                                              class="ant-select-selection-search-input"
                                              id="rc_select_TEST_OR_SSR"
                                              readonly=""
                                              role="combobox"
                                              style="opacity: 0;"
                                              type="search"
                                              unselectable="on"
                                              value=""
                                            />
                                          </span>
                                          <span
                                            class="ant-select-selection-item"
                                            title="50 / page"
                                          >
                                            50 / page
                                          </span>
                                        </div>,
                                      }
                                    }
                                    dropdownClassName=""
                                    dropdownMatchSelectWidth={false}
                                    getPopupContainer={[Function]}
                                    id="rc_select_TEST_OR_SSR"
                                    inputElement={null}
                                    inputIcon={[Function]}
                                    key="trigger"
                                    listHeight={256}
                                    listItemHeight={24}
                                    menuItemSelectedIcon={null}
                                    multiple={false}
                                    notFoundContent={
                                      <Context.Consumer>
                                        [Function]
                                      </Context.Consumer>
                                    }
                                    onChange={[Function]}
                                    onSearch={[Function]}
                                    onSearchSubmit={[Function]}
                                    onSelect={[Function]}
                                    onToggleOpen={[Function]}
                                    optionLabelProp="children"
                                    prefixCls="ant-select"
                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                    searchValue=""
                                    showSearch={false}
                                    tokenWithEnter={false}
                                    transitionName="slide-up"
                                    value="50"
                                    values={
                                      Array [
                                        Object {
                                          "disabled": undefined,
                                          "key": "50",
                                          "label": "50 / page",
                                          "value": "50",
                                        },
                                      ]
                                    }
                                  >
                                    <div
                                      className="ant-select-selector"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                    >
                                      <SingleSelector
                                        accessibilityIndex={0}
                                        activeValue={null}
                                        className="ant-pagination-options-size-changer"
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        domRef={
                                          Object {
                                            "current": <div
                                              class="ant-select-selector"
                                            >
                                              <span
                                                class="ant-select-selection-search"
                                              >
                                                <input
                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                  aria-autocomplete="list"
                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                  aria-haspopup="listbox"
                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                  autocomplete="off"
                                                  class="ant-select-selection-search-input"
                                                  id="rc_select_TEST_OR_SSR"
                                                  readonly=""
                                                  role="combobox"
                                                  style="opacity: 0;"
                                                  type="search"
                                                  unselectable="on"
                                                  value=""
                                                />
                                              </span>
                                              <span
                                                class="ant-select-selection-item"
                                                title="50 / page"
                                              >
                                                50 / page
                                              </span>
                                            </div>,
                                          }
                                        }
                                        dropdownClassName=""
                                        dropdownMatchSelectWidth={false}
                                        getPopupContainer={[Function]}
                                        id="rc_select_TEST_OR_SSR"
                                        inputElement={null}
                                        inputIcon={[Function]}
                                        inputRef={
                                          Object {
                                            "current": <input
                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                              aria-autocomplete="list"
                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                              aria-haspopup="listbox"
                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                              autocomplete="off"
                                              class="ant-select-selection-search-input"
                                              id="rc_select_TEST_OR_SSR"
                                              readonly=""
                                              role="combobox"
                                              style="opacity: 0;"
                                              type="search"
                                              unselectable="on"
                                              value=""
                                            />,
                                          }
                                        }
                                        listHeight={256}
                                        listItemHeight={24}
                                        menuItemSelectedIcon={null}
                                        multiple={false}
                                        notFoundContent={
                                          <Context.Consumer>
                                            [Function]
                                          </Context.Consumer>
                                        }
                                        onChange={[Function]}
                                        onInputChange={[Function]}
                                        onInputCompositionEnd={[Function]}
                                        onInputCompositionStart={[Function]}
                                        onInputKeyDown={[Function]}
                                        onInputMouseDown={[Function]}
                                        onInputPaste={[Function]}
                                        onSearch={[Function]}
                                        onSearchSubmit={[Function]}
                                        onSelect={[Function]}
                                        onToggleOpen={[Function]}
                                        optionLabelProp="children"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        searchValue=""
                                        showSearch={false}
                                        tokenWithEnter={false}
                                        transitionName="slide-up"
                                        value="50"
                                        values={
                                          Array [
                                            Object {
                                              "disabled": undefined,
                                              "key": "50",
                                              "label": "50 / page",
                                              "value": "50",
                                            },
                                          ]
                                        }
                                      >
                                        <span
                                          className="ant-select-selection-search"
                                        >
                                          <Input
                                            accessibilityIndex={0}
                                            attrs={Object {}}
                                            editable={false}
                                            id="rc_select_TEST_OR_SSR"
                                            inputElement={null}
                                            onChange={[Function]}
                                            onCompositionEnd={[Function]}
                                            onCompositionStart={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseDown={[Function]}
                                            onPaste={[Function]}
                                            prefixCls="ant-select"
                                            value=""
                                          >
                                            <input
                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                              aria-autocomplete="list"
                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                              aria-haspopup="listbox"
                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                              autoComplete="off"
                                              className="ant-select-selection-search-input"
                                              id="rc_select_TEST_OR_SSR"
                                              onChange={[Function]}
                                              onCompositionEnd={[Function]}
                                              onCompositionStart={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseDown={[Function]}
                                              onPaste={[Function]}
                                              readOnly={true}
                                              role="combobox"
                                              style={
                                                Object {
                                                  "opacity": 0,
                                                }
                                              }
                                              type="search"
                                              unselectable="on"
                                              value=""
                                            />
                                          </Input>
                                        </span>
                                        <span
                                          className="ant-select-selection-item"
                                          title="50 / page"
                                        >
                                          50 / page
                                        </span>
                                      </SingleSelector>
                                    </div>
                                  </Selector>
                                </Trigger>
                              </SelectTrigger>
                              <TransBtn
                                className="ant-select-arrow"
                                customizeIcon={[Function]}
                                customizeIconProps={
                                  Object {
                                    "focused": false,
                                    "loading": undefined,
                                    "open": undefined,
                                    "searchValue": "",
                                    "showSearch": false,
                                  }
                                }
                              >
                                <span
                                  aria-hidden={true}
                                  className="ant-select-arrow"
                                  onMouseDown={[Function]}
                                  style={
                                    Object {
                                      "WebkitUserSelect": "none",
                                      "userSelect": "none",
                                    }
                                  }
                                  unselectable="on"
                                >
                                  <ForwardRef(DownOutlined)
                                    className="ant-select-suffix"
                                  >
                                    <AntdIcon
                                      className="ant-select-suffix"
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "down",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="down"
                                        className="anticon anticon-down ant-select-suffix"
                                        role="img"
                                      >
                                        <IconReact
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "down",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            data-icon="down"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-down"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                              key="svg-down-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(DownOutlined)>
                                </span>
                              </TransBtn>
                            </div>
                          </ForwardRef(Select)>
                        </Select>
                      </ForwardRef(InternalSelect)>
                    </li>
                  </Options>
                </ul>
              </Pagination>
            </LocaleReceiver>
          </Pagination>
        </Memo(GeneralTable)>
      </div>
    </Memo(ListArea)>
  </div>
</Memo(DemoPageTodoList)>
`;
